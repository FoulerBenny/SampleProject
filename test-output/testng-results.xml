<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="9" failed="0" total="9" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="2552" started-at="2017-01-11T12:15:21Z" finished-at="2017-01-11T12:15:24Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="2552" started-at="2017-01-11T12:15:21Z" finished-at="2017-01-11T12:15:24Z">
      <class name="com.in.testScripts.DeliveryEstimationClass">
        <test-method status="PASS" signature="intitalSetup(org.testng.ITestContext)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="intitalSetup" is-config="true" duration-ms="282" started-at="2017-01-11T17:45:21Z" finished-at="2017-01-11T17:45:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@77a7cf58]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intitalSetup -->
        <test-method status="FAIL" signature="launch_App(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="launch_App" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:22Z" finished-at="2017-01-11T17:45:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@753432a2]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[The driver executable does not exist: F:\E\LeEco\Softwares\SeleniumServer\?F:\E\LeEco\Softwares\Chrome\chromedriver.exe
Command duration or timeout: 728 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'LEBLRCND53434KR', ip: '10.78.132.157', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.remote.RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: The driver executable does not exist: F:\E\LeEco\Softwares\SeleniumServer\?F:\E\LeEco\Softwares\Chrome\chromedriver.exe
Command duration or timeout: 728 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'LEBLRCND53434KR', ip: '10.78.132.157', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:158)
	at com.genericLibraries.BrowserHandler.getDriver(BrowserHandler.java:100)
	at com.genericLibraries.BaseClass.launch_App(BaseClass.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:585)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
Caused by: java.lang.IllegalStateException: The driver executable does not exist: F:\E\LeEco\Softwares\SeleniumServer\?F:\E\LeEco\Softwares\Chrome\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:199)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.chrome.ChromeDriverService.access$0(ChromeDriverService.java:1)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:138)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:103)
	at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:97)
	at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)
	at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)
	at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch_App -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:23Z" finished-at="2017-01-11T17:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="deliveryEstimationPincode(java.util.Map)[pri:1, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="deliveryEstimationPincode" duration-ms="0" started-at="2017-01-11T17:45:23Z" data-provider="DP_GetData" finished-at="2017-01-11T17:45:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{UserName=Leecotestemail@gmail.com, AccountID=Leecotestemail, TestScenario=Delivery_Estimation_check_Valid&Invalid_Pincode, RunStatus=Y, Product=TV, Quantity=, Run=1, TestDescription=This test is to validate the Delivery estimation message when valid and invalid pincode is given, StockStatus=InStock, TC_ID=TC_13, Functionality=deliveryEstimationPincode, ChangePincode=, ProductItem=Super3 X55, Pincode=560100, Password=Qwerty2305}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deliveryEstimationPincode -->
        <test-method status="SKIP" signature="launch_App(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="launch_App" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:23Z" finished-at="2017-01-11T17:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch_App -->
        <test-method status="SKIP" signature="deliveryEstimationPincode(java.util.Map)[pri:1, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="deliveryEstimationPincode" duration-ms="2" started-at="2017-01-11T17:45:23Z" data-provider="DP_GetData" finished-at="2017-01-11T17:45:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{UserName=Leecotestemail@gmail.com, AccountID=Leecotestemail, TestScenario=Delivery_Estimation_check_Valid&Invalid_Pincode, RunStatus=Y, Product=TV, Quantity=, Run=2, TestDescription=This test is to validate the Delivery estimation message when valid pincode is given, StockStatus=InStock, TC_ID=TC_13, Functionality=deliveryEstimationPincode, ChangePincode=, ProductItem=Super3 X55, Pincode=123456, Password=Qwerty2305}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deliveryEstimationPincode -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:23Z" finished-at="2017-01-11T17:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="launch_App(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="launch_App" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:23Z" finished-at="2017-01-11T17:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch_App -->
        <test-method status="SKIP" signature="deliveryEstimationPincode(java.util.Map)[pri:1, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="deliveryEstimationPincode" duration-ms="1" started-at="2017-01-11T17:45:23Z" data-provider="DP_GetData" finished-at="2017-01-11T17:45:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{UserName=Leecotestemail@gmail.com, AccountID=Leecotestemail, TestScenario=Delivery_Estimation_check_Valid&Invalid_Pincode, RunStatus=Y, Product=TV, Quantity=, Run=3, TestDescription=This test is to validate the Delivery estimation message when valid pincode is given, StockStatus=InStock, TC_ID=TC_13, Functionality=deliveryEstimationPincode, ChangePincode=, ProductItem=Super3 X55, Pincode=1234, Password=Qwerty2305}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deliveryEstimationPincode -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:23Z" finished-at="2017-01-11T17:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="deliveryEstimationChangePincode(java.util.Map)[pri:2, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="deliveryEstimationChangePincode" duration-ms="0" started-at="2017-01-11T17:45:24Z" data-provider="DP_GetData" finished-at="2017-01-11T17:45:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{UserName=Leecotestemail@gmail.com, AccountID=Leecotestemail, TestScenario=Delivery_Estimation_check_Change_Pincode, RunStatus=Y, Product=TV, Quantity=, Run=1, TestDescription=This test is to validate the Delivery estimation message when valid pincode is given, StockStatus=InStock, TC_ID=TC_14, Functionality=deliveryEstimationChangePincode, ChangePincode=560100, ProductItem=Super3 X55, Pincode=123456, Password=Qwerty2305}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deliveryEstimationChangePincode -->
        <test-method status="SKIP" signature="launch_App(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="launch_App" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch_App -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="deliveryEstimationChangePincode(java.util.Map)[pri:2, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="deliveryEstimationChangePincode" duration-ms="0" started-at="2017-01-11T17:45:24Z" data-provider="DP_GetData" finished-at="2017-01-11T17:45:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{UserName=Leecotestemail@gmail.com, AccountID=Leecotestemail, TestScenario=Delivery_Estimation_check_Change_Pincode, RunStatus=Y, Product=TV, Quantity=, Run=2, TestDescription=This test is to validate the Delivery estimation message when valid pincode is given, StockStatus=InStock, TC_ID=TC_14, Functionality=deliveryEstimationChangePincode, ChangePincode=654321, ProductItem=Super3 X55, Pincode=123456, Password=Qwerty2305}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deliveryEstimationChangePincode -->
        <test-method status="SKIP" signature="launch_App(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="launch_App" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch_App -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="tearDownSuite()[pri:0, instance:com.in.testScripts.DeliveryEstimationClass@490ab905]" name="tearDownSuite" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownSuite -->
      </class> <!-- com.in.testScripts.DeliveryEstimationClass -->
      <class name="com.in.testScripts.AddressScenario">
        <test-method status="SKIP" signature="launch_App(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="launch_App" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch_App -->
        <test-method status="SKIP" signature="addNewAddressInCheckOutPage(java.util.Map)[pri:1, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="addNewAddressInCheckOutPage" duration-ms="0" started-at="2017-01-11T17:45:24Z" data-provider="DP_GetData" finished-at="2017-01-11T17:45:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{UserName=Leecotestemail@gmail.com, AccountID=Leecotestemail, Email=aaryaden@le.com, TestScenario=Add_New_Address_In_CheckOutPage, AddressLine=2nd main, RunStatus=Y, Product=Accessories, Run=1, TestDescription=This test is to add new address in the  checkout page, StockStatus=InStock,  Mobilenumber=8095677755, TC_ID=TC_03, Functionality=addNewAddressInCheckOutPage, FullName=Test_Order11, AddressAlias=home, ProductItem=LeEco Le 2 Anti-Blue Light Screen Protector, Pincode=560038, Password=Qwerty2305}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewAddressInCheckOutPage -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="launch_App(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="launch_App" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch_App -->
        <test-method status="SKIP" signature="editAddressInCheckOutPage(java.util.Map)[pri:2, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="editAddressInCheckOutPage" duration-ms="1" started-at="2017-01-11T17:45:24Z" data-provider="DP_GetData" finished-at="2017-01-11T17:45:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{UserName=Leecotestemail@gmail.com, AccountID=Leecotestemail, Email=aaryaden@le.com, TestScenario=Edit_Existing_Address_In_CheckOut_Page, AddressLine=2nd main, RunStatus=Y, Product=Accessories, Run=1, TestDescription=This test is to edit the existing address checkout page, StockStatus=InStock,  Mobilenumber=8095677755, TC_ID=TC_04, Functionality=editAddressInCheckOutPage, FullName=Test_Order11, AddressAlias=home, ProductItem=LeEco Le 2 Anti-Blue Light Screen Protector, Pincode=560038, Password=Qwerty2305}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editAddressInCheckOutPage -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="launch_App(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="launch_App" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch_App -->
        <test-method status="SKIP" signature="addNewAddressInMyOrders(java.util.Map)[pri:3, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="addNewAddressInMyOrders" duration-ms="1" started-at="2017-01-11T17:45:24Z" data-provider="DP_GetData" finished-at="2017-01-11T17:45:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{UserName=Leecotestemail@gmail.com, AccountID=Leecotestemail, Email=aaryaden@le.com, TestScenario=Add_New_Address_In_MyOrderPage, AddressLine=2nd main, RunStatus=Y, Product=Accessories, Run=1, TestDescription=This test is to add new address in the  My Order page, StockStatus=InStock,  Mobilenumber=8095677755, TC_ID=TC_05, Functionality=addNewAddressInMyOrders, FullName=Test_Order11, AddressAlias=home, ProductItem=LeEco Le 2 Anti-Blue Light Screen Protector, Pincode=560038, Password=Qwerty2305}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewAddressInMyOrders -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="launch_App(java.lang.String, [Ljava.lang.Object;)[pri:0, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="launch_App" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch_App -->
        <test-method status="SKIP" signature="deleteAddressInMyOrders(java.util.Map)[pri:4, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="deleteAddressInMyOrders" duration-ms="1" started-at="2017-01-11T17:45:24Z" data-provider="DP_GetData" finished-at="2017-01-11T17:45:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{UserName=Leecotestemail@gmail.com, AccountID=Leecotestemail, Email=, TestScenario=Delete_All_Address, AddressLine=, RunStatus=Y, Product=Accessories, Run=1, TestDescription=This test is to delete all the address, StockStatus=InStock,  Mobilenumber=, TC_ID=TC_06, Functionality=deleteAddressInMyOrders, FullName=, AddressAlias=, ProductItem=LeEco Le 2 Anti-Blue Light Screen Protector, Pincode=, Password=Qwerty2305}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAddressInMyOrders -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.in.testScripts.AddressScenario@56ac3a89]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-01-11T17:45:24Z" finished-at="2017-01-11T17:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.in.testScripts.AddressScenario -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
